# now we use the offical paython image as aparent for this docker container
FROM python:3.11

# now we have to lable who is workig on this file 

LABLE maintainer="Muazam Mughal"

# now we have to set the working dir in which the code will run in container

WORKDIR /code

#now we have to install the requied potential python  packages for this contianer

RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*


# now we have to install poetry
RUN pip install poetry

# now we have to copy curent directory to the container
COPY ./code/

# configeration to skip virtual env inside the container
RUN poetry config virtualenvs.create false

#install the dependencies
RUN poetry install

# now we have to expose the port on which the app will run
EXPOSE 8000

# Run the application CMD ca be overidden when satrting the container
CMD ["poetry" ,"run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# furter we explain it furter

# This command tells Docker what to run when the container starts.
# It uses Poetry to run a FastAPI app via the Uvicorn server.

#CMD [
 # "poetry",             # Use Poetry to manage the virtual environment and dependencies
 # "run",                # Run a command inside the Poetry environment
 # "uvicorn",            # Launch the Uvicorn ASGI server (for serving FastAPI apps)
 # "app.main:app",       # Path to the FastAPI app instance: 'app' object inside app/main.py
 #"--host", "0.0.0.0",  # Make the server accessible from outside the container
 # "--port", "8000",     # Run the server on port 8000
 # "--reload"            # Enable auto-reload on code changes (useful for development)
#]
# so this is the breakdown all the docker file

